1. Create a database named “city” with a document composed of the key-value pairs listed below in a collection named “inspections.”

# change DB
use city

# returns all records
db.city.find()


# Returns the current date in Javascript
date1 = Date()

# insert
db.city.insert({date:date1})

#insert multiple document fields at once
 db.inspections.insert({”id" : "20032-2017-ACME", "certificate_number" : "9998888", "business_name" : "ACME Explosives", "date" : "Sun Sep 16 2018 03:53:41 GMT+0000 (UTC)", "result" : "Business Padlocked", "sector" :"Explosive Retail Dealer - 999", "address" : { "number" : 1721, "street" : "Boom Road", "city" : "BRONX", "zip" : 10463 } })

# drop a collection
db.inspections.drop()

# Rename a collection
db.adminCommand({renameCollection:"city.city", to "city.inspections"})

2. Using the mongoimport tool, load the database “city” with documents found in the “city_inspections.json” file into the “inspections” collection. Verify your load by issuing the following queries: 

# mongoimport utility
mongoimport --db city --collection inspections ./city_inspections.json

#Query 1
db.inspections.find({"id" : "10021-2015-ENFO"}) 

#Query 2
db.inspections.find({"result":"Out of Business"},{"business_name":1}).limit(10) 

3. a. What is the distinct list of inspection results in the current inspections collection? How many are in the list? Use JavaScript code to find the answer. 

 db.runCommand({"distinct":"inspections","key":"result"})

# returns the count of distinct results
 db.inspections.distinct("result").length


b.	What is the difference in the date data type for the business named “AUSTIN 2012” versus your business document insertion of “Acme Explosives”?

# type 2 returns all objects of string type
 db.inspections.find( { date: {$type:2} } )

c.	How many businesses have been “padlocked”? (See Value column above.)

db.inspections.find({"result":"Business Padlocked"},{"business_name":1})
